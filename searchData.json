[{"title":"博客支持功能","url":"/2019/03/26/blog-test-ar/","content":"\n## 前言\n\n实验，全部支持暗黑主题^[包括图表也是支持的。]。\n\n<p class=\"success\">状态提示消息 - Success</p>\n<p class=\"warn\">警告提示消息 - Warn</p>\n<p class=\"error\">错误提示消息 - Error</p>\n\n支持深色模式，MacOS 下会自动变色\n\n## 数学公式测试\n\n$$f(x) = a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$\n\n## mermaid测试\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n```\n\n## EBNF测试\n\n```ebnf\ngrammar = { rule } ;\nrule = lhs , \"=\" , rhs , \";\" ;\nlhs = identifier ;\nrhs = identifier\n     | terminal\n     | \"[\" , rhs , \"]\"\n     | \"{\" , rhs , \"}\"\n     | \"(\" , rhs , \")\"\n     | rhs , \"|\" , rhs\n     | rhs , \"a\"\n     | rhs , \",\" , rhs ;\nidentifier = letter , { letter | digit | \"_\" } ;\nterminal = \"'\" , character , { character } , \"'\"\n         | '\"' , character , { character } , '\"' ;\ncharacter = letter | digit | symbol | \"_\" ;\nletter = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\"\n       | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\"\n       | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\"\n       | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\" | \"a\" | \"b\"\n       | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\"\n       | \"j\" | \"k\" | \"l\" | \"m\" | \"n\" | \"o\" | \"p\"\n       | \"q\" | \"r\" | \"s\" | \"t\" | \"u\" | \"v\" | \"w\"\n       | \"x\" | \"y\" | \"z\" ;\ndigit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" ;\nsymbol = \"[\" | \"]\" | \"{\" | \"}\" | \"(\" | \")\" | \"<\" | \">\"\n       | \"'\" | '\"' | \"=\" | \"|\" | \".\" | \",\" | \";\" ;\n```\n\n```ebnf\nletter = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\"\n       | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\"\n       | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\"\n       | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\" | \"a\" | \"b\"\n       | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\"\n       | \"j\" | \"k\" | \"l\" | \"m\" | \"n\" | \"o\" | \"p\"\n       | \"q\" | \"r\" | \"s\" | \"t\" | \"u\" | \"v\" | \"w\"\n       | \"x\" | \"y\" | \"z\" ;\ndigit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" ;\nsymbol = \"[\" | \"]\" | \"{\" | \"}\" | \"(\" | \")\" | \"<\" | \">\"\n       | \"'\" | '\"' | \"=\" | \"|\" | \".\" | \",\" | \";\" ;\n```\n\n## 代码测试\n\n```golang\nfunc (r *raftNodePersister) ReadByBytes(b []byte) error {\n\tif err := gob.NewDecoder(bytes.NewBuffer(b)).Decode(r); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc (r *raftNodePersister) WriteByBytes() ([]byte, error) {\n\tvar buf bytes.Buffer\n\tif err := gob.NewEncoder(&buf).Encode(r); err != nil {\n\t\treturn nil, err\n\t}\n\treturn buf.Bytes(), nil\n}\n```\n","tags":["web","macOS"],"categories":["测试"]}]